/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cc;


import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    @Test void emptyTree(){
        BinaryTree tree = new BinaryTree();
        assertEquals("Empty Tree",App.empty());
    }

    @Test void oneValue() throws Exception {
        assertEquals("Added", App.add(5));
    }

    // add left/ right/ single root + test Traversal
    @Test void methods() throws Exception {
        BinaryTree tree = new BinaryTree();
        Node root =  new Node("A");
        root.left = new Node("B");
        root.right = new Node("C");
        root.left.left = new Node("D");
        root.left.right = new Node("E");
        root.right.left = new Node("F");
        root.right.right = new Node("G");

        assertEquals("PreOrder=> [A, B, D, E, C, F, G]","PreOrder=> "+App.pre(tree,root));
        assertEquals("InOrder=> [D, B, E, A, F, C, G]","InOrder=> "+App.in(tree,root));
        assertEquals("PostOrder=> [D, E, B, F, G, C, A]","PostOrder=> "+App.post(tree,root));
    }
}
